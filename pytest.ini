[pytest]
# Basic configuration
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Test discovery patterns
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=5
    --durations=10

# Async support
asyncio_mode = auto

# Coverage configuration
# Use with: pytest --cov=app --cov-report=html --cov-report=term
# cov-fail-under = 80

# Markers definition
markers =
    integration: marks tests as integration tests (may be slow)
    slow: marks tests as slow (deselect with '-m "not slow"')
    benchmark: marks tests as performance benchmarks
    unit: marks tests as unit tests (fast)
    api: marks tests as API tests
    service: marks tests as service layer tests
    ai: marks tests that require AI services
    vault: marks tests that require Obsidian vault
    session: marks tests for session management
    audio: marks tests for audio processing
    performance: marks tests for performance validation
    load: marks tests for load testing

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection timeout
# timeout = 300  # Requires pytest-timeout plugin

# Environment variables for testing
# Note: Set TESTING=true in command line or use pytest-env plugin
# env =
#     TESTING = true
#     LOG_LEVEL = DEBUG