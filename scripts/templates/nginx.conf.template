events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

    # File upload settings
    client_max_body_size __MAX_UPLOAD_SIZE_MB__M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Upstream backend
    upstream dialtone_backend {
        server voice-notes-api:8000;
        keepalive 32;
    }

    # HTTP server (redirects to HTTPS if SSL enabled)
    server {
        listen 80;
        server_name __DOMAIN__;

        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect to HTTPS if SSL is enabled
        __SSL_REDIRECT_BLOCK__
    }

    # HTTPS server (only included if SSL is enabled)
    __HTTPS_SERVER_BLOCK__
}

# Template blocks (will be replaced during setup)

# SSL_REDIRECT_BLOCK template:
# location / {
#     return 301 https://$server_name$request_uri;
# }

# HTTPS_SERVER_BLOCK template:
# server {
#     listen 443 ssl http2;
#     server_name __DOMAIN__;
#
#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/__DOMAIN__/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/__DOMAIN__/privkey.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:MozTLS:10m;
#     ssl_session_tickets off;
#
#     # Modern configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#
#     # Main application
#     location / {
#         try_files $uri $uri/ @backend;
#     }
#
#     # Static files
#     location /static/ {
#         alias /var/www/html/;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#     }
#
#     # API endpoints
#     location /api/ {
#         limit_req zone=api burst=20 nodelay;
#         proxy_pass http://dialtone_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300s;
#         proxy_connect_timeout 75s;
#     }
#
#     # Upload endpoint with special rate limiting
#     location /api/audio/upload {
#         limit_req zone=upload burst=5 nodelay;
#         proxy_pass http://dialtone_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 600s;
#         proxy_connect_timeout 75s;
#         proxy_request_buffering off;
#     }
#
#     # Health check
#     location /health {
#         proxy_pass http://dialtone_backend;
#         access_log off;
#     }
#
#     # Fallback to backend
#     location @backend {
#         proxy_pass http://dialtone_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }